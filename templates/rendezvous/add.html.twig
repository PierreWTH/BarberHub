{% extends 'base.html.twig' %}

{% block title %} Prendre un rendez-vous {% endblock %}

{% block body %}

{% for message in app.flashes('notice') %}
    <div class="flash-notice">
        {{ message }}
    </div>
{% endfor %}

<h1> Votre rendez vous </h1>

Votre réservation : {{prestation.prestation.nom}} chez {{barbershop.nom}}

{{ form_start(formAddRendezVous) }}

<h3>Choississez un jour : </h3>

<input type="date" name="date" id="datePickerId">

<div id="select-container">
    
</div>

{{ form_row(formAddRendezVous.debut) }}

<p> Choississez un professionnel : </p>

 {{ form_row(formAddRendezVous.personnel) }} 

{{ form_end(formAddRendezVous) }}

{% block javascripts %}



<script>

/* LIMITER SELECTION DATE A MINIMUM LA DATE DU JOUR */
    
datePickerId.min = new Date().toLocaleDateString('fr-ca')

/* RECUPERER LE JOUR DE LA SEMAINE ET LA DATE SELECTIONNEE */

// Récupérer le champ de saisie de type date
const dateInput = document.getElementById('datePickerId');

// Écouter l'événement onchange sur le champ de saisie de type date
dateInput.onchange = function() {

    const selectedDate = new Date(dateInput.value);

    // Récuperer le jour de la semaine en entier
    const options = { weekday: 'long'};

    const jour = selectedDate.toLocaleDateString('fr-FR', options);
    const date = document.getElementById('datePickerId').value;

    /* AFFICHER LES HORAIRES DU BARBIER POUR CE JOUR SEULEMENT */

    // Récupération des horaires du jour 
    const horaires = JSON.parse('{{ horaires | raw }}');
    const horairesJour = horaires[jour];

    // Récupération ouverture et fermeture
    const ouverture = horairesJour.ouverture
    const fermeture = horairesJour.fermeture

    // Conversion des heures en objets Date
    const heureOuverture = new Date('1970-01-01T' + ouverture + ':00');
    const heureFermeture = new Date('1970-01-01T' + fermeture + ':00'); 

    // Si le barbier est fermé ce jour la 
    if (ouverture === "ferme" && fermeture === "ferme") {
        dateInput.value = "";
        alert("Ce barbier n'est pas disponible à cette date. ");
        return
    }  

    // Création du select
    const textHeure = document.createElement('h3');
    textHeure.textContent = "Selectionnez une heure :";

    const select = document.createElement('select');
    select.id = "select-heure";

    // Parcours des créneaux horaires de 30 minutes
    let currentHour = heureOuverture;
    
    while (currentHour < heureFermeture) {
        const heure = currentHour.getHours();
        const minute = currentHour.getMinutes();

        // Création de l'option
        const option = document.createElement('option');
        option.value = `${heure.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;
        option.text = `${heure.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;

        // Ajout de l'option au select
        select.appendChild(option);

        // Créneaux de 30 minutes
        currentHour.setMinutes(minute + 30);
    }
    
    const container = document.getElementById('select-container');
    container.innerHTML = '';
    
    // Ajout du select
    container.appendChild(textHeure);
    container.appendChild(select);

    // Récupération de l'heure 
    const hourSelect = document.getElementById('select-heure');
    
    // HEURE PAR DEFAUT 

    // Récuperation année, mois jour heure minute
    const [anneeDF, moisDF, jourDF] = date.split('-');
    const [heureDF, minuteDF] = ouverture.split(':');

    // Formatage de la date complète
    const heureDebutDF = new Date(anneeDF, moisDF - 1, jourDF, heureDF, minuteDF);

    // On ajoute deux heures car toISOSString fait passer sur le fuseaux horaire UTC au lieu de UTC+2
    heureDebutDF.setHours(heureDebutDF.getHours() + 2);

    // On converti en ISOS string pour que ce soit traité plus facilement dans le back. 
    const heureDebutStringDF = heureDebutDF.toISOString();

    // Récupération des valeurs dans les champs cachés 
    document.getElementById('rendez_vous_debut').setAttribute('value', heureDebutStringDF);

    // Meme traitement si on selectionne une heure
    hourSelect.onchange = function() {
        const rdvHour = hourSelect.value 
        const [annee, mois, jour] = date.split('-');
        const [heure, minute] = rdvHour.split(':');
        const heureDebut = new Date(annee, mois - 1, jour, heure, minute);
        heureDebut.setHours(heureDebut.getHours() + 2);
        const heureDebutString = heureDebut.toISOString();

        document.getElementById('rendez_vous_debut').setAttribute('value', heureDebutString);
    }

};
</script>
{% endblock javascripts %}

{% endblock %}


